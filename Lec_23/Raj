#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct Number {
    int value;
    int frequency;
};

bool compare(const Number& a, const Number& b) {
    if (a.frequency == b.frequency) {
        return a.value < b.value;
    }
    return a.frequency < b.frequency;
}

void merge(vector<Number>& arr, int left, int middle, int right) {
    int n1 = middle - left + 1;
    int n2 = right - middle;

    vector<Number> left_half(arr.begin() + left, arr.begin() + left + n1);
    vector<Number> right_half(arr.begin() + middle + 1, arr.begin() + middle + 1 + n2);

    int i = 0, j = 0, k = left;

    while (i < n1 && j < n2) {
        if (compare(left_half[i], right_half[j])) {
            arr[k] = left_half[i];
            i++;
        } else {
            arr[k] = right_half[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = left_half[i];
        i++;
        k++;
    }

    while (j < n2) {
        arr[k] = right_half[j];
        j++;
        k++;
    }
}

void merge_sort(vector<Number>& arr, int left, int right) {
    if (left < right) {
        int middle = left + (right - left) / 2;
        merge_sort(arr, left, middle);
        merge_sort(arr, middle + 1, right);
        merge(arr, left, middle, right);
    }
}

int main() {
    int n;
    cin >> n;

    vector<Number> numbers(n);

    for (int i = 0; i < n; i++) {
        cin >> numbers[i].value;
        numbers[i].frequency = 0;
    }

    // Count the frequency of each number
    for (int i = 0; i < n; i++) {
        if (numbers[i].frequency == 0) {
            numbers[i].frequency = 1;
            for (int j = i + 1; j < n; j++) {
                if (numbers[i].value == numbers[j].value) {
                    numbers[i].frequency++;
                    numbers[j].frequency = -1; // Mark as counted
                }
            }
        }
    }

    merge_sort(numbers, 0, n - 1);

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < numbers[i].frequency; j++) {
            cout << numbers[i].value << " ";
        }
    }
    cout << endl;

    return 0;
}
